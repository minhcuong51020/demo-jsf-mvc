package com.hmc.entity;
// Generated Jul 11, 2022 1:50:54 PM by Hibernate Tools 5.2.11.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.NotFound;
import org.hibernate.annotations.NotFoundAction;
import org.primefaces.model.UploadedFile;

/**
 * Book generated by hbm2java
 */
@Entity
@Table(name = "book", catalog = "bookstore")
public class Book implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer id;
	private Author author;
	private Category category;
	private Publisher publisher;
	private String title;
	private String isbn;
	private Float price;
	private Float discount;
	private String description;
	private Date createdAt;
	private Date updatedAt;
	private String thumbnail;
	private Integer isActive;
	private Integer category_id;
	private Integer author_id;
	private Integer publisher_id;
	private Set<OrderDetails> orderDetailses = new HashSet<OrderDetails>(0);
	private Set<CartBook> cartBooks = new HashSet<CartBook>(0);
	private Set<Gallery> galleries = new HashSet<Gallery>(0);
	private UploadedFile file;

	public Book() {
	}

	public Book(Category category) {
		this.category = category;
	}

	public Book(Author author, Category category, Publisher publisher, String title, String isbn, Float price,
			Float discount, String description, Date createdAt, Date updatedAt, String thumbnail, Integer isActive,
			Set<OrderDetails> orderDetailses, Set<CartBook> cartBooks, Set<Gallery> galleries, UploadedFile file) {
		this.author = author;
		this.category = category;
		this.publisher = publisher;
		this.title = title;
		this.isbn = isbn;
		this.price = price;
		this.discount = discount;
		this.description = description;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.thumbnail = thumbnail;
		this.isActive = isActive;
		this.orderDetailses = orderDetailses;
		this.cartBooks = cartBooks;
		this.galleries = galleries;
		this.file = file;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY, optional = true)
	@JoinColumn(name = "author_id", nullable = true, insertable = false, updatable = false)
	@NotFound(action = NotFoundAction.IGNORE)
	public Author getAuthor() {
		return this.author;
	}

	public void setAuthor(Author author) {
		this.author = author;
	}

	@ManyToOne(fetch = FetchType.LAZY, optional = true)
	@JoinColumn(name = "category_id", nullable = true, insertable = false, updatable = false)
	@NotFound(action = NotFoundAction.IGNORE)
	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "publisher_id", nullable = true, insertable = false, updatable = false)
	public Publisher getPublisher() {
		return this.publisher;
	}

	public void setPublisher(Publisher publisher) {
		this.publisher = publisher;
	}

	@Column(name = "title")
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "isbn")
	public String getIsbn() {
		return this.isbn;
	}

	public void setIsbn(String isbn) {
		this.isbn = isbn;
	}

	@Column(name = "price", precision = 12, scale = 0)
	public Float getPrice() {
		return this.price;
	}

	public void setPrice(Float price) {
		this.price = price;
	}

	@Column(name = "discount", precision = 12, scale = 0)
	public Float getDiscount() {
		return this.discount;
	}

	public void setDiscount(Float discount) {
		this.discount = discount;
	}

	@Column(name = "description", length = 65535)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", length = 19)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@Column(name = "thumbnail", length = 500)
	public String getThumbnail() {
		return this.thumbnail;
	}

	public void setThumbnail(String thumbnail) {
		this.thumbnail = thumbnail;
	}

	@Column(name = "is_active")
	public Integer getIsActive() {
		return this.isActive;
	}

	public void setIsActive(Integer isActive) {
		this.isActive = isActive;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "book")
	public Set<OrderDetails> getOrderDetailses() {
		return this.orderDetailses;
	}

	public void setOrderDetailses(Set<OrderDetails> orderDetailses) {
		this.orderDetailses = orderDetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "book")
	public Set<CartBook> getCartBooks() {
		return this.cartBooks;
	}

	public void setCartBooks(Set<CartBook> cartBooks) {
		this.cartBooks = cartBooks;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "book")
	public Set<Gallery> getGalleries() {
		return this.galleries;
	}

	public void setGalleries(Set<Gallery> galleries) {
		this.galleries = galleries;
	}

	@Column(name="category_id", nullable=true, updatable=true, insertable=true)
	public Integer getCategory_id() {
		return category_id;
	}

	public void setCategory_id(Integer category_id) {
		this.category_id = category_id;
	}
	
	@Column(name="author_id", nullable=true, updatable=true, insertable=true)
	public Integer getAuthor_id() {
		return author_id;
	}

	public void setAuthor_id(Integer author_id) {
		this.author_id = author_id;
	}

	@Column(name="publisher_id", nullable=true, updatable=true, insertable=true)
	public Integer getPublisher_id() {
		return publisher_id;
	}

	public void setPublisher_id(Integer publisher_id) {
		this.publisher_id = publisher_id;
	}
	
	@Transient
	public UploadedFile getFile() {
		return file;
	}
	
	public void setFile(UploadedFile file) {
		this.file = file;
	}

}
